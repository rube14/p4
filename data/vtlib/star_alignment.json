{
"description":"run star to to align input bam to supplied reference genome",
"version":"1.0",
"subgraph_io":{
    "ports":{
                "inputs":{
                            "_stdin_":"bamtofastq",
                            "reference":"star:__REFERENCE_GENOME_IN__"
                         },
                "outputs":{
                            "_stdout_":"star"
                          }
            }
},
"subst_params":[
    {
        "id": "basic_pipeline_params",
        "type":"SPFILE",
        "name":{"subst":"basic_pipeline_params_file"},
        "required": "no",
        "comment":"this will expand to a set of subst_param elements"
    },
    {
        "id":"fastq1_name",
        "required":"no",
        "default":"intfile_1.fq.gz",
        "subst_constructor":{
                                "vals":[ "intfile_1_", {"subst":"rpt"}, ".fq.gz" ],
                                "postproc":{"op":"concat", "pad":""}
                            }
    },
    {
        "id":"fastq1",
        "required":"yes",
        "subst_constructor":{
                                "vals":[ {"subst":"tmpdir"}, "/", {"subst":"fastq1_name"} ],
                                "postproc":{"op":"concat", "pad":""}
                            }
    },
    {
        "id":"fastq2_name",
        "required":"no",
        "default":"intfile_2.fq.gz",
        "subst_constructor":{
                                "vals":[ "intfile_2_", {"subst":"rpt"}, ".fq.gz" ],
                                "postproc":{"op":"concat", "pad":""}
                            }
    },
    {
        "id":"fastq2",
        "required":"yes",
        "subst_constructor":{
                                "vals":[ {"subst":"tmpdir"}, "/", {"subst":"fastq2_name"} ],
                                "postproc":{"op":"concat", "pad":""}
                            }
    },
    {
        "id":"star_dir","required":"no","default":"."
    },
    {
        "id":"star_out",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"star_dir"}, "/", "_", {"subst":"rpt"}, "_" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"annotation_val",
        "subst_constructor":{
                                "vals":[ {"subst":"reposdir"}, "/transcriptomes/", {"subst":"transcriptome_subpath"} ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"sjdb_annotation_flag",
        "required":"no",
        "subst_constructor":{
                                "vals":[ "--sjdbGTFfile", {"subst":"annotation_val"} ],
                                "postproc":{"op":"concat","pad":" "}
                            }
    },
    {
        "id":"aligner_numthreads_flag",
        "required":"no",
        "subst_constructor":{
                                "vals":[ "--runThreadN", {"subst":"aligner_numthreads"} ],
                                "postproc":{"op":"concat","pad":" "}
                            }
    },
    {
        "id":"sjdb_overhang_val",
        "required":"no",
        "default":"99"
    },
    {
        "id":"sjdb_overhang_flag",
        "required":"no",
        "subst_constructor":{
                                "vals":[ "--sjdbOverhang", {"subst":"sjdb_overhang_val"} ],
                                "postproc":{"op":"concat","pad":" "}
                            }
    },
    {
        "id":"junctions_tab",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"star_out"}, "SJ.out.tab" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"totranscriptome_bam",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"star_out"}, "Aligned.toTranscriptome.out.bam" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"chimeric_sam",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"star_out"}, "Chimeric.out.sam" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"readspergene_tab",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"star_out"}, "ReadsPerGene.out.tab" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"scramble_chimeric_sam_target",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".chimeric.cram" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"scramble_totranscriptome_bam_target",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".totranscriptome.cram" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"scramble_genome_reference_flag",
        "required":"no",
        "subst_constructor":{ "vals":[ "-r", {"subst":"reference_genome_fasta"} ] }
    },
    {
        "id":"scramble_transcriptome_reference_flag",
        "required":"no",
        "subst_constructor":{ "vals":[ "-r", {"subst":"reference_transcriptome_fasta"} ] }
    },
    {
        "id":"cp_junctions_tab_target",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".junctions.tab" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"cp_readspergene_tab_target",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".readspergene.tab" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"star_executable",
        "required":"no",
        "default":"STAR"
    },
    {
        "id":"salmon_dir",
        "required":"no",
        "default":"salmon_quant"
    },
    {
        "id":"salmon_out",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"} ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"salmon_quant",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"salmon_dir"}, "_", {"subst":"rpt"}, "/quant.sf" ],
                                "postproc":{"op":"concat","pad":""}
                            },
        "default":"salmon_quant/quant.sf"
    },
    {
        "id":"cp_salmon_quant_target",
        "required":"no",
        "subst_constructor":{
                                "vals":[ {"subst":"outdatadir"}, "/", {"subst":"rpt"}, ".transcripts.quant" ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"transcriptome_subpath",
        "required":"no"
    },
    {
        "id":"transcriptome_val",
        "subst_constructor":{
                                "vals":[ {"subst":"reposdir"}, "/transcriptomes/", {"subst":"transcriptome_subpath"} ],
                                "postproc":{"op":"concat","pad":""}
                            }
    },
    {
        "id":"gene_mapping_flag",
        "required":"no",
        "subst_constructor":{
                                "vals":[ "--geneMap=", {"subst":"annotation_val"} ],
                                "postproc":{"op":"concat","pad":""}
                            }
    }
],
"nodes":[
    {
        "id":"bamtofastq",
        "type":"EXEC",
        "use_STDIN": true,
        "use_STDOUT": false,
        "cmd":["bamtofastq", "gz=0", "F=__FQ1_OUT__", "F2=__FQ2_OUT__"]
    },
    {
        "id":"fq1",
        "type":"RAFILE",
        "name":{"subst":"fastq1"}
    },
    {
        "id":"fq2",
        "type":"RAFILE",
        "name":{"subst":"fastq2"}
    },
    {
        "id":"star",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": true,
        "cmd": [
                {"subst":"star_executable"},
                "--runMode", "alignReads",
                "--outFileNamePrefix", {"subst":"star_out"},
                {"subst":"aligner_numthreads_flag"},
                "--genomeLoad", "NoSharedMemory",
                {"subst":"sjdb_annotation_flag"},
                {"subst":"sjdb_overhang_flag"},
                "--outSAMstrandField", "intronMotif",
                "--outSAMattributes", "NH", "HI", "NM", "MD", "AS", "XS",
                "--outSAMunmapped", "Within", "KeepPairs",
                "--outSAMtype", "BAM", "Unsorted",
                "--outFilterIntronMotifs", "RemoveNoncanonicalUnannotated",
                "--chimOutType", "SeparateSAMold",
                "--chimSegmentMin", "15",
                "--chimJunctionOverhangMin", "15",
                "--quantMode", "TranscriptomeSAM", "GeneCounts",
                "--genomeDir", "__REFERENCE_GENOME_IN__",
                "--readFilesIn", "__FQ1_IN__", "__FQ2_IN__",
                "--outStd", "BAM_Unsorted"
        ]
    },
    {
        "id":"junctions_tab",
        "type":"RAFILE",
        "subtype":"DUMMY",
        "name":{"subst":"junctions_tab"}
    },
    {
        "id":"totranscriptome_bam",
        "type":"RAFILE",
        "subtype":"DUMMY",
        "name":{"subst":"totranscriptome_bam"}
    },
    {
        "id":"chimeric_sam",
        "type":"RAFILE",
        "subtype":"DUMMY",
        "name":{"subst":"chimeric_sam"}
    },
    {
        "id":"readspergene_tab",
        "type":"RAFILE",
        "subtype":"DUMMY",
        "name":{"subst":"readspergene_tab"}
    },
    {
        "id":"scramble_chimeric_sam",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": false,
        "cmd":[
                "scramble",
                {"subst":"b2c_mt", "ifnull":{"subst_constructor":{ "vals":[ "-t", {"subst":"b2c_mt_val"} ]}}},
                {"subst":"b2c_fmtver", "ifnull":{"subst_constructor":{ "vals":[ "-V", {"subst":"b2c_format_version"} ]}}},
                {"subst":"b2c_compress_level", "ifnull":"-7"},
                "-I", "sam",
                "-O", "cram",
                {"subst":"scramble_genome_reference_flag"},
                "__SRC_CHIMERIC_SAM_IN__",
                {"subst":"scramble_chimeric_sam_target"}
        ]
    },
    {
        "id":"scramble_totranscriptome_bam",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": false,
        "cmd":[
                "scramble",
                {"subst":"b2c_mt", "ifnull":{"subst_constructor":{ "vals":[ "-t", {"subst":"b2c_mt_val"} ]}}},
                {"subst":"b2c_fmtver", "ifnull":{"subst_constructor":{ "vals":[ "-V", {"subst":"b2c_format_version"} ]}}},
                {"subst":"b2c_compress_level", "ifnull":"-7"},
                "-I", "bam",
                "-O", "cram",
                {"subst":"scramble_transcriptome_reference_flag"},
                "__SRC_TOTRANSCRIPTOME_BAM_IN__",
                {"subst":"scramble_totranscriptome_bam_target"}
        ]
    },
    {
        "id":"cp_junctions_tab",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": false,
        "cmd":[ "cp", "__SRC_JUNCTIONS_TAB_IN__", {"subst":"cp_junctions_tab_target"} ]
    },
    {
        "id":"cp_readspergene_tab",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": false,
        "cmd":[ "cp", "__SRC_READSPERGENE_TAB_IN__", {"subst":"cp_readspergene_tab_target"} ]
    },
    {
        "id":"salmon",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": false,
        "cmd":[
                "salmon",
                "--no-version-check",
                "quant",
                "--index", {"subst":"transcriptome_val"},
                "--libType", "A",
                "--mates1", "__FQ1_IN__",
                "--mates2", "__FQ2_IN__",
                {"subst":"gene_mapping_flag"},
                {"subst":"b2c_mt", "ifnull":{"subst_constructor":{ "vals":[ "-p", {"subst":"b2c_mt_val"} ]}}},
                "--output", {"subst":"salmon_out"}
        ]
    },
    {
        "id":"salmon_quant",
        "type":"RAFILE",
        "subtype":"DUMMY",
        "name":{"subst":"salmon_quant"}
    },
    {
        "id":"cp_salmon_quant",
        "type":"EXEC",
        "use_STDIN": false,
        "use_STDOUT": false,
        "cmd":[ "cp", "__SRC_SALMON_QUANT_IN__", {"subst":"cp_salmon_quant_target"} ]
    }
],
"edges":[
    { "id":"bamtofastq_to_fq1", "from":"bamtofastq:__FQ1_OUT__", "to":"fq1" },
    { "id":"bamtofastq_to_fq2", "from":"bamtofastq:__FQ2_OUT__", "to":"fq2" },
    { "id":"fq1_to_star", "from":"fq1", "to":"star:__FQ1_IN__" },
    { "id":"fq2_to_star", "from":"fq2", "to":"star:__FQ2_IN__" },
    { "id":"star_to_readspergene_tab", "from":"star", "to":"readspergene_tab" },
    { "id":"star_to_chimeric_sam", "from":"star", "to":"chimeric_sam" },
    { "id":"scramble_chimeric_sam", "from":"chimeric_sam", "to":"scramble_chimeric_sam:__SRC_CHIMERIC_SAM_IN__"},
    { "id":"star_to_totranscriptome_bam", "from":"star", "to":"totranscriptome_bam" },
    { "id":"scramble_totranscriptome_bam", "from":"totranscriptome_bam", "to":"scramble_totranscriptome_bam:__SRC_TOTRANSCRIPTOME_BAM_IN__" },
    { "id":"star_to_junctions_tab", "from":"star", "to":"junctions_tab" },
    { "id":"cp_junctions_tab", "from":"junctions_tab", "to":"cp_junctions_tab:__SRC_JUNCTIONS_TAB_IN__" },
    { "id":"star_to_readspergene_tab", "from":"star", "to":"readspergene_tab" },
    { "id":"cp_readspergene_tab", "from":"readspergene_tab", "to":"cp_readspergene_tab:__SRC_READSPERGENE_TAB_IN__" },
    { "id":"fq1_to_salmon", "from":"fq1", "to":"salmon:__FQ1_IN__" },
    { "id":"fq2_to_salmon", "from":"fq2", "to":"salmon:__FQ2_IN__" },
    { "id":"salmon_to_salmon_quant", "from":"salmon", "to":"salmon_quant"},
    { "id":"salmon_quant_to_cp_salmon_quant", "from":"salmon_quant", "to":"cp_salmon_quant:__SRC_SALMON_QUANT_IN__"}
]
}